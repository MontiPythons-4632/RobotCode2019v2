// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4632.RobotCode2019v2.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4632.RobotCode2019v2.Robot;
import org.usfirst.frc4632.RobotCode2019v2.subsystems.Elevator;
//import edu.wpi.first.wpilibj.Joystick;


public class JoystickElevator extends Command {

    // private Joystick joystick = new Joystick(0);
    
    // Constructor
    public JoystickElevator() {

  
        requires(Robot.elevator);

    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        // System.out.println("joystickElevator Initialized");
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        
        /* drive robot */
        double topSpeed = Robot.oi.getElevatorSpeed();
        double bottomSpeed = Robot.oi.getElevatorSpeed();
        Elevator.Direction topDir = Elevator.Direction.Up;
        Elevator.Direction bottomDir = Elevator.Direction.Up;
        int tempBottomDir = 1;
        int tempTopDir = 1;

        double lock = 0.1;

        if (topSpeed < 0.0) {
            topSpeed *= 0.3;
            topDir = Elevator.Direction.Down;
            tempBottomDir = -1;
        }

        if (bottomSpeed < 0.0) {
            bottomSpeed *= 0.3;
            bottomDir = Elevator.Direction.Down;
            tempBottomDir = -1;
        }

        if( Robot.oi.getElevatorForAction() == "bottom") {
            Robot.elevator.moveBottom(bottomSpeed,tempBottomDir);
            Robot.elevator.moveTop(lock,1);
        } else {
           System.out.println("Move Top");
           Robot.elevator.moveTop(topSpeed,tempTopDir);
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }

 

}
